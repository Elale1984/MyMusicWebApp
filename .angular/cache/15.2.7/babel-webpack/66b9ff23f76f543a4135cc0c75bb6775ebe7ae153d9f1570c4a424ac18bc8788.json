{"ast":null,"code":"import { Album } from '../models/Album';\nimport { Track } from '../models/Track';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/music-service.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction CreateAlbumComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"form\", 3, 4);\n    i0.ɵɵlistener(\"ngSubmit\", function CreateAlbumComponent_div_0_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onSubmit());\n    });\n    i0.ɵɵelementStart(3, \"fieldset\")(4, \"div\", 5)(5, \"label\", 6);\n    i0.ɵɵtext(6, \"Artist\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"input\", 7);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateAlbumComponent_div_0_Template_input_ngModelChange_7_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.album.Artist = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 5)(9, \"label\", 8);\n    i0.ɵɵtext(10, \"Album\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"input\", 9);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateAlbumComponent_div_0_Template_input_ngModelChange_11_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.album.Title = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"div\", 5)(13, \"label\", 10);\n    i0.ɵɵtext(14, \"Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"textarea\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateAlbumComponent_div_0_Template_textarea_ngModelChange_15_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.album.Description = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"div\", 5)(17, \"label\", 12);\n    i0.ɵɵtext(18, \"Year\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"input\", 13);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateAlbumComponent_div_0_Template_input_ngModelChange_19_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.album.Year = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(20, \"div\", 5)(21, \"label\", 14);\n    i0.ɵɵtext(22, \"Image Filename\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"input\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateAlbumComponent_div_0_Template_input_ngModelChange_23_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.album.Image = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(24, \"div\", 5)(25, \"label\", 16);\n    i0.ɵɵtext(26, \"Tracks\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"textarea\", 17);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateAlbumComponent_div_0_Template_textarea_ngModelChange_27_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.tracksRaw = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(28, \"button\", 18);\n    i0.ɵɵtext(29, \"Submit\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.album.Artist);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.album.Title);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.album.Description);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.album.Year);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.album.Image);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.tracksRaw);\n  }\n}\nfunction CreateAlbumComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Album was added successfully.\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class CreateAlbumComponent {\n  constructor(service) {\n    this.service = service;\n    this.album = new Album(Math.floor(Math.random() * 1000000), '', '', '', 0, '', []);\n    this.tracksRaw = '';\n    this.wasSubmitted = false;\n  }\n  ngOnInit() {}\n  onSubmit() {\n    const tracks = this.parseTracks(this.tracksRaw);\n    this.album.Tracks = tracks;\n    const status = this.service.createAlbum(this.album);\n    console.log('The return from createAlbum() was ' + status);\n    this.wasSubmitted = true;\n  }\n  parseTracks(rawTracks) {\n    const tracks = [];\n    const lines = rawTracks.split('\\n');\n    lines.forEach((line, index) => {\n      const [title, lyrics, video] = line.split(':');\n      tracks.push(new Track(Math.floor(Math.random() * 1000000), index + 1, title, lyrics || '', video || ''));\n    });\n    return tracks;\n  }\n}\nCreateAlbumComponent.ɵfac = function CreateAlbumComponent_Factory(t) {\n  return new (t || CreateAlbumComponent)(i0.ɵɵdirectiveInject(i1.MusicServiceService));\n};\nCreateAlbumComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateAlbumComponent,\n  selectors: [[\"app-create-album\"]],\n  decls: 2,\n  vars: 2,\n  consts: [[\"class\", \"form-container\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"form-container\"], [3, \"ngSubmit\"], [\"createForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"artist\"], [\"id\", \"artist\", \"type\", \"text\", \"aria-describedby\", \"helpArtist\", \"placeholder\", \"Enter the name of the Artist\", \"required\", \"\", \"name\", \"artist\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"album\"], [\"id\", \"album\", \"type\", \"text\", \"aria-describedby\", \"helpAlbum\", \"placeholder\", \"Enter the name of the Album\", \"required\", \"\", \"name\", \"title\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"description\"], [\"id\", \"description\", \"rows\", \"3\", \"aria-describedby\", \"helpDescription\", \"placeholder\", \"Enter the description of the Album\", \"required\", \"\", \"name\", \"description\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"year\"], [\"id\", \"year\", \"type\", \"text\", \"aria-describedby\", \"helpYear\", \"placeholder\", \"Enter the year of the Album\", \"required\", \"\", \"name\", \"year\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"image\"], [\"id\", \"image\", \"type\", \"text\", \"aria-describedby\", \"helpImage\", \"placeholder\", \"Enter the image filename for the Album\", \"name\", \"image\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"tracks\"], [\"id\", \"tracks\", \"rows\", \"3\", \"aria-describedby\", \"helpTracks\", \"placeholder\", \"Enter each track followed by a return key for the Album\", \"required\", \"\", \"name\", \"tracks\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", \"btn-primary\", \"\", 1, \"btn\"]],\n  template: function CreateAlbumComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CreateAlbumComponent_div_0_Template, 30, 6, \"div\", 0);\n      i0.ɵɵtemplate(1, CreateAlbumComponent_div_1_Template, 2, 0, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.wasSubmitted);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.wasSubmitted);\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Album","Track","i0","CreateAlbumComponent","constructor","service","Math","floor","random","ngOnInit","onSubmit","tracks","parseTracks","tracksRaw","album","Tracks","status","createAlbum","console","log","wasSubmitted","rawTracks","lines","split","forEach","line","index","title","lyrics","video","push","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/potluck/Dev/Angular/2023/src/app/create-album/create-album.component.ts","/home/potluck/Dev/Angular/2023/src/app/create-album/create-album.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Album } from '../models/Album';\nimport { Track } from '../models/Track';\nimport { MusicServiceService } from '../service/music-service.service';\n\n@Component({\n\tselector: 'app-create-album',\n\ttemplateUrl: './create-album.component.html',\n\tstyleUrls: ['./create-album.component.css'],\n})\nexport class CreateAlbumComponent implements OnInit {\n\talbum: Album = new Album(Math.floor(Math.random() * 1000000), '', '', '', 0, '', []);\n\ttracksRaw: string = '';\n\twasSubmitted: boolean = false;\n\n\tconstructor(private service: MusicServiceService) { }\n\n\tngOnInit() { }\n\n\tpublic onSubmit() {\n\t\tconst tracks: Track[] = this.parseTracks(this.tracksRaw);\n\t\tthis.album.Tracks = tracks;\n\t\tconst status = this.service.createAlbum(this.album);\n\t\tconsole.log('The return from createAlbum() was ' + status);\n\t\tthis.wasSubmitted = true;\n\t}\n\n\tprivate parseTracks(rawTracks: string): Track[] {\n\t\tconst tracks: Track[] = [];\n\t\tconst lines = rawTracks.split('\\n');\n\n\t\tlines.forEach((line, index) => {\n\t\t\tconst [title, lyrics, video] = line.split(':');\n\t\t\ttracks.push(new Track(Math.floor(Math.random() * 1000000), index + 1, title, lyrics || '', video || ''));\n\t\t});\n\n\t\treturn tracks;\n\t}\n}\n","<div class=\"form-container\" *ngIf=\"!wasSubmitted\">\n    <form (ngSubmit)=\"onSubmit()\" #createForm=\"ngForm\">\n        <fieldset>\n            <div class=\"form-group\">\n                <label for=\"artist\">Artist</label>\n                <input id=\"artist\" type=\"text\"\n                       class=\"form-control\" aria-describedby=\"helpArtist\"\n                       placeholder=\"Enter the name of the Artist\" required\n                       [(ngModel)]=\"album.Artist\" name=\"artist\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"album\">Album</label>\n                <input id=\"album\" type=\"text\"\n                       class=\"form-control\" aria-describedby=\"helpAlbum\"\n                       placeholder=\"Enter the name of the Album\" required\n                       [(ngModel)]=\"album.Title\" name=\"title\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"description\">Description</label>\n                <textarea id=\"description\" rows=\"3\" class=\"form-control\"\n                          aria-describedby=\"helpDescription\"\n                          placeholder=\"Enter the description of the Album\" required\n                          [(ngModel)]=\"album.Description\" name=\"description\"></textarea>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"year\">Year</label>\n                <input id=\"year\" type=\"text\"\n                       class=\"form-control\" aria-describedby=\"helpYear\"\n                       placeholder=\"Enter the year of the Album\" required\n                       [(ngModel)]=\"album.Year\" name=\"year\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"image\">Image Filename</label>\n                <input id=\"image\"\n                       type=\"text\" class=\"form-control\"\n                       aria-describedby=\"helpImage\"\n                       placeholder=\"Enter the image filename for the Album\"\n                       [(ngModel)]=\"album.Image\" name=\"image\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"tracks\">Tracks</label>\n                <textarea id=\"tracks\" rows=\"3\" class=\"form-control\"\n                          aria-describedby=\"helpTracks\"\n                          placeholder=\"Enter each track followed by a return key for the Album\"\n                          required [(ngModel)]=\"tracksRaw\" name=\"tracks\"></textarea>\n            </div>\n            <button type=\"submit\" class=btn btn-primary>Submit</button>\n        </fieldset>\n\n    </form>\n</div>\n<div *ngIf=\"wasSubmitted\">Album was added successfully.</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}